version: "3.9"

services:
  # Next.js Frontend Service
  nextjs:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile-Front
    image: nextjs:custom
    container_name: frontend
    volumes:
      - ./web/themes/next.js:/app
    environment:
      - API_URL=http://webserver/api/ # Updated to point to Nginx, which routes to Drupal
    ports:
      - "3000:3000" # Expose Next.js internal port for debugging
    networks:
      - app-network
    depends_on:
      - drupal
      - mysql

  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: untold-mysql
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password # Adjust as needed
      MYSQL_DATABASE: untold_headless # Matches settings.php
      MYSQL_USER: chris.albon # Matches settings.php
      MYSQL_PASSWORD: dM3cJ0pY7dA6 # Matches settings.php
    networks:
      - app-network

  # Drupal Backend Service
  drupal:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile-Back
    image: drupal:custom
    container_name: drupal
    volumes:
      - drupal-data:/var/www/html
    networks:
      - app-network
    depends_on:
      - mysql
    restart: unless-stopped
    environment:
      - DRUPAL_DATABASE_HOST=mysql
      - DRUPAL_DATABASE_NAME=untold_headless
      - DRUPAL_DATABASE_USER=chris.albon
      - DRUPAL_DATABASE_PASSWORD=dM3cJ0pY7dA6

  # Nginx Web Server Service
  webserver:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8080:80" # Expose Nginx on host port 8080
    volumes:
      - drupal-data:/var/www/html # Serve Drupal static files
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf # Mount updated Nginx config
    depends_on:
      - drupal
    networks:
      - app-network

volumes:
  drupal-data: # Persistent volume for Drupal content
  db-data: # Persistent volume for MySQL database

networks:
  app-network:
    driver: bridge
